{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","GiftGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAe,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdN,EAFc,iDAEkCO,UAAUF,GAF5C,+DAGDG,MAAMR,GAHL,cAGdS,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVtB,kBAcbY,GAda,4CAAH,sDCIRM,EAAW,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OATAC,qBAAW,WACPlB,EAASC,GAAUkB,MAAM,SAAAC,GACrBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACd,IAEGe,EDbyBK,CAAapB,GAAhCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAErB,OACI,oCACA,4BAAKd,GACHc,GAAW,sCACb,yBAAKlB,UAAU,aAEPe,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAY,IAAKZ,EAAIC,IACLD,UEcTa,EA3BO,WAAM,MAIY1C,mBAAS,CAAC,cAJtB,mBAIjB2C,EAJiB,KAIL5C,EAJK,KAWxB,OACI,oCACA,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ4C,EAAWf,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CAAUqB,IAAKrB,EAAUA,SAAUA,UCjBvDwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1dff411b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setcategories} ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setcategories( cates => [inputValue, ...cates] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=d95FsiVA1W36oXTtRXF62M8HVeltnI6x`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GiftGridItem } from './GiftGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img => \r\n                    <GiftGridItem \r\n                    key={img.id} \r\n                    {...img} />\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(category).then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {   \r\n\r\n    //     setcategories([...categories, 'sdfs']);\r\n    // }\r\n\r\n    return ( \r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setcategories={setcategories}/>\r\n        <hr/>\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                    <GiftGrid key={category} category={category} ></GiftGrid>\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\n\nReactDOM.render(\n  <GiftExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}